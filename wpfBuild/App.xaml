<!--
	IVCS theme and templates
		Styles for different controls and customized controls can be found here.
	
	-->
<Application x:Class="wpfBuild.App" StartupUri="Window1.xaml" 
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
			 xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
			 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d" 
			 xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Classic"
			 xmlns:converters="clr-namespace:wpfBuild.converters">
	<Application.Resources>


<!--
		doesn't work because this isn't the proper key
		todo: try and get the damn focus rectangles off things like buttons and tabitem headers
		<Style x:Key="{x:Static SystemParameters.FocusVisualStyleKey}">
			<Setter Property="Control.Template">
				<Setter.Value>
					<ControlTemplate>
						<Rectangle StrokeThickness="1" Stroke="Blue" StrokeDashArray="1 2" SnapsToDevicePixels="true" />
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
-->
		<!-- Resources scoped at the Application level should be defined here. -->
        <ControlTemplate x:Key="GlassButton" TargetType="{x:Type Button}">
            <Border BorderBrush="#FFFFFFFF" BorderThickness="1,1,1,1" CornerRadius="4,4,4,4">
                <Border Background="#7F000000" BorderBrush="#FF000000" BorderThickness="1,1,1,1" CornerRadius="4,4,4,4" x:Name="border">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.512*"/>
                            <RowDefinition Height="0.488*"/>
                        </Grid.RowDefinitions>
                        <Border HorizontalAlignment="Stretch" Width="Auto" Grid.RowSpan="2" CornerRadius="4,4,4,4" x:Name="glow" Opacity="0">
                            <Border.Background>
                                <RadialGradientBrush>
                                    <RadialGradientBrush.RelativeTransform>
                                        <TransformGroup>
                                            <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.741" ScaleY="2.036"/>
                                            <SkewTransform AngleX="0" AngleY="0" CenterX="0.5" CenterY="0.5"/>
                                            <RotateTransform Angle="0" CenterX="0.5" CenterY="0.5"/>
                                            <TranslateTransform X="-0.013" Y="0.433"/>
                                        </TransformGroup>
                                    </RadialGradientBrush.RelativeTransform>
                                    <GradientStop Color="#B28DBDFF" Offset="0"/>
                                    <GradientStop Color="#008DBDFF" Offset="1"/>
                                </RadialGradientBrush>
                            </Border.Background>
                        </Border>
                        <!-- using the content control we can set the forground and more
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Width="Auto" Grid.RowSpan="2"/>
                        -->
                        <ContentControl x:Name="content" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Width="Auto" Grid.RowSpan="2" Foreground="#FFEFEFEF" FontFamily="./Fonts\#Century Gothic"/>
                        <Border HorizontalAlignment="Stretch" Margin="0,0,0,0" CornerRadius="4,4,0,0" x:Name="shine" Opacity="0.8">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#99FFFFFF" Offset="0"/>
                                    <GradientStop Color="#33FFFFFF" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                    </Grid>
                </Border>
            </Border>
            <ControlTemplate.Resources>
                <Storyboard x:Key="Storyboard1">
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="glow" Storyboard.TargetProperty="(UIElement.Opacity)">
                        <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
                <Storyboard x:Key="Storyboard2">
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="glow" Storyboard.TargetProperty="(UIElement.Opacity)">
                        <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
            </ControlTemplate.Resources>
            <ControlTemplate.Triggers>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Visibility" TargetName="glow" Value="Hidden"/>
                    <Setter Property="Background" TargetName="border" Value="#CC000000"/>
                    <Setter Property="Opacity" TargetName="shine" Value="0.4"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard Storyboard="{StaticResource Storyboard1}"/>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard x:Name="Storyboard2_BeginStoryboard" Storyboard="{StaticResource Storyboard2}"/>
                    </Trigger.ExitActions>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" TargetName="shine" Value="0.0"/>
                    <Setter TargetName="content" Property="Foreground" Value="#88EFEFEF" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        
        <ControlTemplate x:Key="GlassRepeatButton" TargetType="{x:Type RepeatButton}">
            <Border BorderBrush="#FFFFFFFF" BorderThickness="1,1,1,1" CornerRadius="4,4,4,4">
                <Border Background="#7F000000" BorderBrush="#FF000000" BorderThickness="1,1,1,1" CornerRadius="4,4,4,4" x:Name="border">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.512*"/>
                            <RowDefinition Height="0.488*"/>
                        </Grid.RowDefinitions>
                        <Border HorizontalAlignment="Stretch" Width="Auto" Grid.RowSpan="2" CornerRadius="4,4,4,4" x:Name="glow" Opacity="0">
                            <Border.Background>
                                <RadialGradientBrush>
                                    <RadialGradientBrush.RelativeTransform>
                                        <TransformGroup>
                                            <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.741" ScaleY="2.036"/>
                                            <SkewTransform AngleX="0" AngleY="0" CenterX="0.5" CenterY="0.5"/>
                                            <RotateTransform Angle="0" CenterX="0.5" CenterY="0.5"/>
                                            <TranslateTransform X="-0.013" Y="0.433"/>
                                        </TransformGroup>
                                    </RadialGradientBrush.RelativeTransform>
                                    <GradientStop Color="#B28DBDFF" Offset="0"/>
                                    <GradientStop Color="#008DBDFF" Offset="1"/>
                                </RadialGradientBrush>
                            </Border.Background>
                        </Border>
                        <!-- using the content control we can set the forground and more
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Width="Auto" Grid.RowSpan="2"/>
                        -->
                        <ContentControl x:Name="content" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Width="Auto" Grid.RowSpan="2" Foreground="#FFEFEFEF" FontFamily="./Fonts\#Century Gothic"/>
                        <Border HorizontalAlignment="Stretch" Margin="0,0,0,0" CornerRadius="4,4,0,0" x:Name="shine" Opacity="0.8">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#99FFFFFF" Offset="0"/>
                                    <GradientStop Color="#33FFFFFF" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                    </Grid>
                </Border>
            </Border>
            <ControlTemplate.Resources>
                <Storyboard x:Key="Storyboard1">
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="glow" Storyboard.TargetProperty="(UIElement.Opacity)">
                        <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
                <Storyboard x:Key="Storyboard2">
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="glow" Storyboard.TargetProperty="(UIElement.Opacity)">
                        <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
            </ControlTemplate.Resources>
            <ControlTemplate.Triggers>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Visibility" TargetName="glow" Value="Hidden"/>
                    <Setter Property="Background" TargetName="border" Value="#CC000000"/>
                    <Setter Property="Opacity" TargetName="shine" Value="0.4"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard Storyboard="{StaticResource Storyboard1}"/>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard x:Name="Storyboard2_BeginStoryboard" Storyboard="{StaticResource Storyboard2}"/>
                    </Trigger.ExitActions>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" TargetName="shine" Value="0.0"/>
                    <Setter TargetName="content" Property="Foreground" Value="#88EFEFEF" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        
        <ControlTemplate x:Key="GlassToggleButton" TargetType="{x:Type ToggleButton}">
            <Border BorderBrush="#FFFFFFFF" BorderThickness="1,1,1,1" CornerRadius="4,4,4,4">
                <Border Background="#7F000000" BorderBrush="#FF000000" BorderThickness="1,1,1,1" CornerRadius="4,4,4,4" x:Name="border">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.512*"/>
                            <RowDefinition Height="0.488*"/>
                        </Grid.RowDefinitions>
                        <Border HorizontalAlignment="Stretch" Width="Auto" Grid.RowSpan="2" CornerRadius="4,4,4,4" x:Name="glow" Opacity="0">
                            <Border.Background>
                                <RadialGradientBrush>
                                    <RadialGradientBrush.RelativeTransform>
                                        <TransformGroup>
                                            <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.741" ScaleY="2.036"/>
                                            <SkewTransform AngleX="0" AngleY="0" CenterX="0.5" CenterY="0.5"/>
                                            <RotateTransform Angle="0" CenterX="0.5" CenterY="0.5"/>
                                            <TranslateTransform X="-0.013" Y="0.433"/>
                                        </TransformGroup>
                                    </RadialGradientBrush.RelativeTransform>
                                    <GradientStop Color="#B28DBDFF" Offset="0"/>
                                    <GradientStop Color="#008DBDFF" Offset="1"/>
                                </RadialGradientBrush>
                            </Border.Background>
                        </Border>
                        <!-- using the content control we can set the forground and more
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Width="Auto" Grid.RowSpan="2"/>
                        -->
                        <ContentControl Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Width="Auto" Grid.RowSpan="2" Foreground="#FFEFEFEF" FontFamily="./Fonts\#Century Gothic" x:Name="ContentControl"/>
                        <Border HorizontalAlignment="Stretch" Margin="0,0,0,0" CornerRadius="4,4,0,0" x:Name="shine">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#99FFFFFF" Offset="0"/>
                                    <GradientStop Color="#33FFFFFF" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                    </Grid>
                </Border>
            </Border>
            <ControlTemplate.Resources>
                <Storyboard x:Key="Storyboard1">
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="glow" Storyboard.TargetProperty="(UIElement.Opacity)">
                        <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
                <Storyboard x:Key="Storyboard2">
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="glow" Storyboard.TargetProperty="(UIElement.Opacity)">
                        <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
            </ControlTemplate.Resources>
            <ControlTemplate.Triggers>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Visibility" TargetName="glow" Value="Hidden"/>
                    <Setter Property="Background" TargetName="border" Value="#CC000000"/>
                    <Setter Property="Opacity" TargetName="shine" Value="0.4"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard Storyboard="{StaticResource Storyboard1}"/>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard x:Name="Storyboard2_BeginStoryboard" Storyboard="{StaticResource Storyboard2}"/>
                    </Trigger.ExitActions>
                </Trigger>

                <Trigger Property="IsChecked" Value="true">
                    <Setter Property="Foreground" TargetName="ContentControl" Value="DodgerBlue"/>
                    <Setter Property="FontWeight" TargetName="ContentControl" Value="Bold" />
                </Trigger>

                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" TargetName="shine" Value="0.0"/>
                    <Setter TargetName="ContentControl" Property="Foreground" Value="#88EFEFEF" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        

        <!-- Button shape/path information -->
        <Path x:Key="shapePause" x:Shared="False"
              Fill="#FFFFFFFF" Stretch="Fill" Stroke="#FF000000" HorizontalAlignment="Left" Margin="92.913,160.612,0,0" x:Name="triangle_play_Copy1" VerticalAlignment="Top" Width="24.837" Height="38.268" Data="M68.834843,160.39347 C67.730201,161.2268 67.313,197.25 68.875,197.625 70.437,198 91.687339,176.8543 91.686339,176.12483 91.685339,175.39537 69.939485,159.56013 68.834843,160.39347 z" ClipToBounds="False" SnapsToDevicePixels="False"/>
        
        <Path x:Key="MyPath" x:Shared="False"
          Stretch="Fill" StrokeLineJoin="Round" Stroke="#FF000000" Fill="#FF000000" 
          Data="F1 M1,1 L3,2 L1,3 L1,1 Z " />



        <LinearGradientBrush x:Key="Shine" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#99FFFFFF" Offset="0"/>
            <GradientStop Color="#33FFFFFF" Offset="1"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="glassBorderBG" Color="#7F000000"/>
        <RadialGradientBrush x:Key="glassGlow">
            <RadialGradientBrush.RelativeTransform>
                <TransformGroup>
                    <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.741" ScaleY="2.036"/>
                    <SkewTransform AngleX="0" AngleY="0" CenterX="0.5" CenterY="0.5"/>
                    <RotateTransform Angle="0" CenterX="0.5" CenterY="0.5"/>
                    <TranslateTransform X="-0.013" Y="0.433"/>
                </TransformGroup>
            </RadialGradientBrush.RelativeTransform>
            <GradientStop Color="#B28DBDFF" Offset="0"/>
            <GradientStop Color="#008DBDFF" Offset="1"/>
        </RadialGradientBrush>

		<LinearGradientBrush x:Key="iconShine" EndPoint="0.5,1" StartPoint="0.5,0">
			<GradientStop Color="#ddFFFFFF" Offset="0"/>
			<GradientStop Color="#50FFFFFF" Offset="1"/>
		</LinearGradientBrush>


		<ControlTemplate x:Key="glassToggle" TargetType="{x:Type ToggleButton}">
            <Grid>
                <Viewbox>
                    <Canvas Width="100" Height="100">
                        <Ellipse Fill="{DynamicResource glassBorderBG}" Stroke="#FFFFFFFF" Margin="0,0,0,0" x:Name="border_ellipse" Width="100" Height="100" Opacity="1" StrokeThickness="3"/>
                        <Ellipse Fill="{DynamicResource glassBorderBG}" x:Name="black_bg" Margin="1,1,0,0" Width="98" Height="98" StrokeThickness="1" Stroke="#FF000000">
                            <Ellipse.BitmapEffect>
                                <OuterGlowBitmapEffect GlowColor="#FF1668D8" GlowSize="9" Opacity="1"/>
                            </Ellipse.BitmapEffect>
                        </Ellipse>
                        <Ellipse Fill="{DynamicResource glassGlow}" x:Name="innerGlow" Opacity="0.595" Width="95" Height="95" Margin="2,2,0,0" SnapsToDevicePixels="False" ClipToBounds="False"/>
                        <Border CornerRadius="50,50,0,0" x:Name="shine" Background="{DynamicResource Shine}" Margin="2.5,2,0,0" Width="94.5" Height="48" SnapsToDevicePixels="True"/>
                        <Grid Width="100" Height="100" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" x:Name="Shapes_Grid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="0.5*"/>
                                <ColumnDefinition Width="0.5*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="border_left" Width="18" Background="{DynamicResource glassBorderBG}" BorderBrush="{DynamicResource Shine}" BorderThickness="1,1,1,1" CornerRadius="7,7,7,7" HorizontalAlignment="Right" Margin="0,0,3,0" Height="70" ClipToBounds="False" SnapsToDevicePixels="False" Visibility="Visible" Opacity="0"/>
                            <Border Grid.ColumnSpan="2" Grid.Column="1" CornerRadius="7,7,7,7" HorizontalAlignment="Left" VerticalAlignment="Center" Width="18" Height="70" BorderThickness="1,1,1,1" BorderBrush="{DynamicResource Shine}" Background="{DynamicResource glassBorderBG}" Margin="3,0,0,0" x:Name="border_right" Visibility="Visible" Opacity="0"/>
                            <Path Fill="{DynamicResource glassBorderBG}" Stretch="Fill" Stroke="{DynamicResource Shine}" HorizontalAlignment="Center" Margin="10,14.587,0,14.96" Data="M27.5,84.833333 C23.875174,83.458338 24.125022,17.417336 27,15.500336 29.874978,13.583336 70.083669,46.750523 70.166667,49.167002 70.249664,51.583482 31.124826,86.208328 27.5,84.833333 z" Width="46.355" x:Name="play_path" VerticalAlignment="Center" Grid.ColumnSpan="2" Opacity="1"/>
                        </Grid>
                    </Canvas>
                </Viewbox>
            </Grid>
            <ControlTemplate.Resources>
                <Storyboard x:Key="showPlay">
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="border_left" Storyboard.TargetProperty="(UIElement.Opacity)">
                        <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="border_right" Storyboard.TargetProperty="(UIElement.Opacity)">
                        <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="play_path" Storyboard.TargetProperty="(UIElement.Opacity)">
                        <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
                <Storyboard x:Key="showPause">
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="play_path" Storyboard.TargetProperty="(UIElement.Opacity)">
                        <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0"/>
                    </DoubleAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="border_left" Storyboard.TargetProperty="(UIElement.Visibility)">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00.3000000" Value="{x:Static Visibility.Visible}"/>
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="border_left" Storyboard.TargetProperty="(UIElement.Opacity)">
                        <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="border_right" Storyboard.TargetProperty="(UIElement.Opacity)">
                        <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                    </DoubleAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="border_right" Storyboard.TargetProperty="(UIElement.Visibility)">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00.3000000" Value="{x:Static Visibility.Visible}"/>
                    </ObjectAnimationUsingKeyFrames>
                </Storyboard>
            </ControlTemplate.Resources>
            <ControlTemplate.Triggers>
                <EventTrigger RoutedEvent="ToggleButton.Checked">
                    <BeginStoryboard x:Name="showPause_BeginStoryboard1" Storyboard="{StaticResource showPause}"/>
                </EventTrigger>
                <EventTrigger RoutedEvent="ToggleButton.Unchecked">
                    <BeginStoryboard x:Name="showPlay_BeginStoryboard1" Storyboard="{StaticResource showPlay}"/>
                </EventTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        
        
        <!-- SLIDE #################-->
        
        <Style x:Key="SliderButtonStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Transparent" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SliderThumbStyle" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="Width" Value="20"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Ellipse 
          Name="Ellipse" 
          Fill="{DynamicResource NormalBrush}"
          Stroke="{DynamicResource NormalBorderBrush}"
          StrokeThickness="1" />
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Ellipse" Property="Fill" Value="{DynamicResource DarkBrush}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Ellipse" Property="Fill" Value="{DynamicResource DisabledBackgroundBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="HorizontalSlider" TargetType="{x:Type Slider}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto" MinHeight="{TemplateBinding Slider.MinHeight}"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <TickBar 
      Name="TopTick"
      SnapsToDevicePixels="True" 
      Placement="Top"
      Fill="{DynamicResource GlyphBrush}"
      Height="4"
      Visibility="Collapsed" />
                <Border 
      Name="TrackBackground"
      Margin="0"
      CornerRadius="2" 
      Height="4"
      Grid.Row="1"
      Background="{DynamicResource LightBrush}" 
      BorderBrush="{DynamicResource NormalBorderBrush}"
      BorderThickness="1" />
                <Track Grid.Row="1" Name="PART_Track">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton 
          Style="{DynamicResource SliderButtonStyle}"
          Command="Slider.DecreaseLarge" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{DynamicResource SliderThumbStyle}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton 
          Style="{DynamicResource SliderButtonStyle}"
          Command="Slider.IncreaseLarge" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <TickBar 
      Name="BottomTick"
      SnapsToDevicePixels="True" 
      Grid.Row="2"
      Fill="{TemplateBinding Foreground}"
      Placement="Bottom"
      Height="4"
      Visibility="Collapsed" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="TickPlacement" Value="TopLeft">
                    <Setter TargetName="TopTick" Property="Visibility" Value="Visible"/>
                </Trigger>
                <Trigger Property="TickPlacement" Value="BottomRight">
                    <Setter TargetName="BottomTick" Property="Visibility" Value="Visible"/>
                </Trigger>
                <Trigger Property="TickPlacement" Value="Both">
                    <Setter TargetName="TopTick" Property="Visibility" Value="Visible"/>
                    <Setter TargetName="BottomTick" Property="Visibility" Value="Visible"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="VerticalSlider" TargetType="{x:Type Slider}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto" MinWidth="{TemplateBinding Slider.MinWidth}"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <TickBar 
      Name="TopTick"
      SnapsToDevicePixels="True" 
      Placement="Left"
      Fill="{DynamicResource GlyphBrush}"
      Width="4"
      Visibility="Collapsed" />
                <Border 
      Name="TrackBackground"
      Margin="0"
      CornerRadius="2" 
      Width="4"
      Grid.Column="1"
      Background="{DynamicResource HorizontalLightBrush}" 
      BorderBrush="{DynamicResource HorizontalNormalBorderBrush}"
      BorderThickness="1" />
                <Track Grid.Column="1" Name="PART_Track">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton 
          Style="{DynamicResource SliderButtonStyle}"
          Command="Slider.DecreaseLarge" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{DynamicResource SliderThumbStyle}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton 
          Style="{DynamicResource SliderButtonStyle}"
          Command="Slider.IncreaseLarge" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <TickBar 
      Name="BottomTick"
      SnapsToDevicePixels="True" 
      Grid.Column="2"
      Fill="{TemplateBinding Foreground}"
      Placement="Right"
      Width="4"
      Visibility="Collapsed" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="TickPlacement" Value="TopLeft">
                    <Setter TargetName="TopTick" Property="Visibility" Value="Visible"/>
                </Trigger>
                <Trigger Property="TickPlacement" Value="BottomRight">
                    <Setter TargetName="BottomTick" Property="Visibility" Value="Visible"/>
                </Trigger>
                <Trigger Property="TickPlacement" Value="Both">
                    <Setter TargetName="TopTick" Property="Visibility" Value="Visible"/>
                    <Setter TargetName="BottomTick" Property="Visibility" Value="Visible"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!-- being applied to all sliders here, note!-->
        <Style TargetType="{x:Type Slider}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="MinWidth" Value="104" />
                    <Setter Property="MinHeight" Value="21" />
                    <Setter Property="Template" Value="{DynamicResource HorizontalSlider}" />
                </Trigger>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="MinWidth" Value="21" />
                    <Setter Property="MinHeight" Value="104" />
                    <Setter Property="Template" Value="{DynamicResource VerticalSlider}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <!-- Fill Brushes -->

        <LinearGradientBrush x:Key="NormalBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#FFF" Offset="0.0"/>
                    <GradientStop Color="#CCC" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="HorizontalNormalBrush" StartPoint="0,0" EndPoint="1,0">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#FFF" Offset="0.0"/>
                    <GradientStop Color="#CCC" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="LightBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#FFF" Offset="0.0"/>
                    <GradientStop Color="#EEE" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="HorizontalLightBrush" StartPoint="0,0" EndPoint="1,0">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#FFF" Offset="0.0"/>
                    <GradientStop Color="#EEE" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="DarkBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#FFF" Offset="0.0"/>
                    <GradientStop Color="#AAA" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="PressedBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#BBB" Offset="0.0"/>
                    <GradientStop Color="#EEE" Offset="0.1"/>
                    <GradientStop Color="#EEE" Offset="0.9"/>
                    <GradientStop Color="#FFF" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />

        <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE" />

        <SolidColorBrush x:Key="WindowBackgroundBrush" Color="#FFF" />

        <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="#DDD" />

        <!-- Border Brushes -->

        <LinearGradientBrush x:Key="NormalBorderBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#CCC" Offset="0.0"/>
                    <GradientStop Color="#444" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="HorizontalNormalBorderBrush" StartPoint="0,0" EndPoint="1,0">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#CCC" Offset="0.0"/>
                    <GradientStop Color="#444" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="DefaultedBorderBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#777" Offset="0.0"/>
                    <GradientStop Color="#000" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="PressedBorderBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#444" Offset="0.0"/>
                    <GradientStop Color="#888" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA" />

        <SolidColorBrush x:Key="SolidBorderBrush" Color="#888" />

        <SolidColorBrush x:Key="LightBorderBrush" Color="#AAA" />

        <!-- Miscellaneous Brushes -->
        <SolidColorBrush x:Key="GlyphBrush" Color="#444" />

        <SolidColorBrush x:Key="LightColorBrush" Color="#DDD" />
        
        
        <!-- SLIDER END #######-->

        <Style x:Key="ThumbStyleGlass" TargetType="{x:Type Thumb}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Foreground" Value="{x:Null}"/>
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
            <Setter Property="Height" Value="21"/>
            <Setter Property="Width" Value="11"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border CornerRadius="3" BorderThickness="1,1,1,1" BorderBrush="#FFFFFFFF" Background="Black">
                            <Border BorderBrush="#FF000000" BorderThickness="1,1,1,1" CornerRadius="3" Width="Auto" Height="Auto" Background="#7F000000">
                                <Grid Width="Auto" Height="Auto">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="0.512*"/>
                                        <RowDefinition Height="0.488*"/>
                                    </Grid.RowDefinitions>
                                    <Border HorizontalAlignment="Stretch" Width="Auto" Grid.RowSpan="2" CornerRadius="3" x:Name="glow" Opacity="0">
                                        <Border.Background>
                                            <RadialGradientBrush>
                                                <RadialGradientBrush.RelativeTransform>
                                                    <TransformGroup>
                                                        <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.741" ScaleY="2.036"/>
                                                        <SkewTransform AngleX="0" AngleY="0" CenterX="0.5" CenterY="0.5"/>
                                                        <RotateTransform Angle="0" CenterX="0.5" CenterY="0.5"/>
                                                        <TranslateTransform X="-0.013" Y="0.433"/>
                                                    </TransformGroup>
                                                </RadialGradientBrush.RelativeTransform>
                                                <GradientStop Color="#B28DBDFF" Offset="0"/>
                                                <GradientStop Color="#008DBDFF" Offset="1"/>
                                            </RadialGradientBrush>
                                        </Border.Background>
                                    </Border>
                                    <Border HorizontalAlignment="Stretch" Margin="0" CornerRadius="3,3,0,0" x:Name="shine">
                                        <Border.Background>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="#99FFFFFF" Offset="0"/>
                                                <GradientStop Color="#33FFFFFF" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Border.Background>
                                    </Border>
                                </Grid>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDragging" Value="true">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!-- DO NOT REMOVE -->
        <!-- needed so that we don't get 2 errors (hor/vert) per listviewitem we create spit out into the output window
            which then causes the computer to lag to shit (doesn't affect the non-debugger version AFAIK)-->
        <!-- this shitty error is due to the default styles of the lvis see links for more info:
                http://stackoverflow.com/questions/160391/listbox-with-grid-as-itemspaneltemplate-produces-weird-binding-errors
                http://social.msdn.microsoft.com/forums/en-US/wpf/thread/296e949a-e273-4187-946d-901902d40bbf/ -->
        <Style TargetType="{x:Type ListViewItem}">
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
        </Style>
        
        
        
        
        
        
        
        
        
        
        
        
        
        <SolidColorBrush x:Key="whitey" Color="#FFEFEFEF" />
        <SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}" Color="DodgerBlue" />
       <!--
        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#1A4F6B" />
        -->
        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#0E273B" />      
        
        
        <!-- checkbox/radio and just about every other element's inner content font colour -->
        <SolidColorBrush x:Key="{x:Static SystemColors.WindowTextBrushKey}" Color="DimGray" />       

        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrush}" Color="Orange" />

        <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="#FF0A0A0A" />




        <Style x:Key="glassTabControl" TargetType="{x:Type TabControl}">
            <!--
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>-->
            <Setter Property="Foreground" Value="#FFEFEFEF"/>            
            <!--
			<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
            -->
            
            <!--
                idea: 
            it's really cool to use {DynamicResource glassBorderBG} for the background of the tabcontrol.
                but it sucks when we layer tcs on top of each other (it gets really dark.
                    maybe make a tc style without a background, and apply it to any controls that go over the main one, because {DynamicResource glassBorderBG} for a background is super cool.
            
            -->
            
            <Setter Property="Background" Value="transparent" />
            <!-- <Setter Property="Background" Value="#FF0A0A0A" />-->
			<Setter Property="BorderBrush" Value="#00FFFFFF"/>
			<Setter Property="BorderThickness" Value="3"/>
			<Setter Property="Margin" Value="0"/>
			<Setter Property="Padding" Value="1"/>
			<Setter Property="MinWidth" Value="10"/>
			<Setter Property="MinHeight" Value="10"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TabControl}">
						<Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" x:Name="RowDefinition0"/>
								<RowDefinition Height="*" x:Name="RowDefinition1"/>
							</Grid.RowDefinitions>
							<Grid.ColumnDefinitions>
								<ColumnDefinition x:Name="ColumnDefinition0"/>
								<ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
							</Grid.ColumnDefinitions>
							<TabPanel HorizontalAlignment="Center" x:Name="HeaderPanel" VerticalAlignment="Stretch" Grid.Column="0" Grid.Row="0" IsItemsHost="true" Panel.ZIndex="1" KeyboardNavigation.TabIndex="1"/>
							<Grid x:Name="ContentPanel" Grid.Column="0" Grid.Row="1" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
								<Border x:Name="classicBorderDecorator" Background="{TemplateBinding Background}">
                                    <ContentPresenter x:Name="PART_SelectedContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ContentSource="SelectedContent"/>
                                </Border>
							</Grid>
							<Border HorizontalAlignment="Stretch" x:Name="HeaderBG" Width="Auto" Background="{TemplateBinding Background}" Grid.RowSpan="1"/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="TabStripPlacement" Value="Bottom">
								<Setter Property="Grid.Row" TargetName="HeaderPanel" Value="1"/>
								<Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
								<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
								<Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
								<Setter Property="Margin" TargetName="HeaderPanel" Value="2,0,2,2"/>
								<Setter Property="Grid.Row" TargetName="HeaderBG" Value="1"/>
								<Setter Property="BorderBrush" TargetName="classicBorderDecorator" Value="{x:Null}"/>
							</Trigger>
							<Trigger Property="TabStripPlacement" Value="Left">
								<Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
								<Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
								<Setter Property="Grid.Column" TargetName="HeaderPanel" Value="0"/>
								<Setter Property="Grid.Column" TargetName="ContentPanel" Value="1"/>
								<Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
								<Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
								<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
								<Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
								<Setter Property="Margin" TargetName="HeaderPanel" Value="2,2,0,2"/>
							</Trigger>
							<Trigger Property="TabStripPlacement" Value="Right">
								<Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
								<Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
								<Setter Property="Grid.Column" TargetName="HeaderPanel" Value="1"/>
								<Setter Property="Grid.Column" TargetName="ContentPanel" Value="0"/>
								<Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
								<Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
								<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
								<Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
								<Setter Property="Margin" TargetName="HeaderPanel" Value="0,2,2,2"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="glassTabControl_noTabStrip" TargetType="{x:Type TabControl}" BasedOn="{StaticResource glassTabControl}">
			
		</Style>


		<Style x:Key="glassTabItem" TargetType="{x:Type TabItem}">
			<Setter Property="Padding" Value="12,2,12,2"/>
			<!--
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>-->
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
        <!---->
			<Setter Property="Foreground" Value="#FFEFEFEF"/>
			<Setter Property="FontFamily" Value="./Fonts\#Century Gothic" />
			<Setter Property="FontSize" Value="13" />
			<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
			<Setter Property="VerticalContentAlignment" Value="Stretch"/>
			<Setter Property="FocusVisualStyle" Value="{x:Null}" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TabItem}">
						<ControlTemplate.Resources>
							<Storyboard x:Key="addGlow">
								<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="glow" Storyboard.TargetProperty="(UIElement.Opacity)">
									<SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.35"/>
								</DoubleAnimationUsingKeyFrames>
							</Storyboard>
							<Storyboard x:Key="glowRemove">
								<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="glow" Storyboard.TargetProperty="(UIElement.Opacity)">
									<SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
								</DoubleAnimationUsingKeyFrames>
							</Storyboard>
						</ControlTemplate.Resources>
						<Grid>
							<Border BorderBrush="#8AFFFFFF" BorderThickness="0,0,0,0" CornerRadius="3,3,3,3" VerticalAlignment="Top" Height="Auto" Grid.Row="1" Margin="-1,0,-1,0" x:Name="border">
								<Border Background="#7F000000" BorderBrush="#FF000000" BorderThickness="0.5,0,0.5,1" CornerRadius="3,3,3,3" x:Name="border1">
									<Grid>
										<Grid.RowDefinitions>
											<RowDefinition Height="0.512*"/>
											<RowDefinition Height="0.488*"/>
										</Grid.RowDefinitions>
										<Border HorizontalAlignment="Stretch" Width="Auto" Grid.RowSpan="2" CornerRadius="3,3,3,3" x:Name="glow" Opacity="0">
											<Border.Background>
												<RadialGradientBrush>
													<RadialGradientBrush.RelativeTransform>
														<TransformGroup>
															<ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.741" ScaleY="2.036"/>
															<SkewTransform AngleX="0" AngleY="0" CenterX="0.5" CenterY="0.5"/>
															<RotateTransform Angle="0" CenterX="0.5" CenterY="0.5"/>
															<TranslateTransform X="-0.013" Y="0.433"/>
														</TransformGroup>
													</RadialGradientBrush.RelativeTransform>
													<GradientStop Color="#B28DBDFF" Offset="0"/>
													<GradientStop Color="#008DBDFF" Offset="1"/>
												</RadialGradientBrush>
											</Border.Background>
										</Border>
										<Border HorizontalAlignment="Stretch" Margin="0,0,0,0" CornerRadius="3,3,0,0" x:Name="shine" Opacity="0.35">
											<Border.Background>
												<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
													<GradientStop Color="#99FFFFFF" Offset="0"/>
													<GradientStop Color="#33FFFFFF" Offset="1"/>
												</LinearGradientBrush>
											</Border.Background>
										</Border>
										<ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ContentSource="Header" RecognizesAccessKey="True" Margin="5,3,5,3" Grid.RowSpan="2" HorizontalAlignment="Center" VerticalAlignment="Center"/>
									</Grid>
								</Border>
							</Border>
						</Grid>
						<ControlTemplate.Triggers>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsMouseOver" Value="True"/>
									<Condition Property="Selector.IsSelected" Value="False"/>
								</MultiTrigger.Conditions>
								<MultiTrigger.ExitActions>
									<BeginStoryboard x:Name="glowRemove_BeginStoryboard" Storyboard="{StaticResource glowRemove}"/>
								</MultiTrigger.ExitActions>
								<MultiTrigger.EnterActions>
									<BeginStoryboard x:Name="addGlow_BeginStoryboard" Storyboard="{StaticResource addGlow}"/>
								</MultiTrigger.EnterActions>
							</MultiTrigger>
							<Trigger Property="IsSelected" Value="true">
								<Setter Property="Panel.ZIndex" Value="1"/>
								<Setter Property="Foreground" Value="#FF1E90FF"/>
								<Setter Property="Opacity" TargetName="shine" Value="0.095"/>
								<Setter Property="BorderThickness" TargetName="border" Value="1,0,1,0"/>
							</Trigger>
							<Trigger Property="TabStripPlacement" Value="Bottom"/>
							<Trigger Property="TabStripPlacement" Value="Left"/>
							<Trigger Property="TabStripPlacement" Value="Right"/>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="true"/>
									<Condition Property="TabStripPlacement" Value="Top"/>
								</MultiTrigger.Conditions>
								<Setter Property="Margin" Value="-2"/>
							</MultiTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="true"/>
									<Condition Property="TabStripPlacement" Value="Bottom"/>
								</MultiTrigger.Conditions>
							</MultiTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="true"/>
									<Condition Property="TabStripPlacement" Value="Left"/>
								</MultiTrigger.Conditions>
								<Setter Property="Padding" Value="11,2,14,2"/>
								<Setter Property="Margin" Value="-2"/>
							</MultiTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="true"/>
									<Condition Property="TabStripPlacement" Value="Right"/>
								</MultiTrigger.Conditions>
								<Setter Property="Padding" Value="14,2,11,2"/>
								<Setter Property="Margin" Value="-2"/>
							</MultiTrigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		
		
		
		<Style TargetType="{x:Type Button}">
			<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		</Style>
		
		<Style TargetType="{x:Type ToggleButton}">
			<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		</Style>
		
		
		<ControlTemplate x:Key="audioIcon">
            <Image x:Name="audioIconImage" Source="Resources/images\silk\music.png" Width="17" Height="16" />
        </ControlTemplate>
        
        <ControlTemplate x:Key="videoIcon">
            <Image x:Name="videoIconImage" Source="Resources/images\silk\film.png" Width="17" Height="16" />
        </ControlTemplate>
        
        <ControlTemplate x:Key="imageIcon">
            <Image x:Name="imageIconImage" Source="Resources/images\silk\picture.png" Width="17" Height="16" />
        </ControlTemplate>
		
		<!--
		<Style x:Key="TabControlNoTabStrip" TargetType="{x:Type TabControl}">
			
		</Style>
		-->
		<!-- uncomment once done testing-->
        <Style x:Key="TabControlNoTabStrip" TargetType="{x:Type TabControl}">
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
			<Setter Property="BorderBrush" Value="{x:Static Microsoft_Windows_Themes:ClassicBorderDecorator.ClassicBorderBrush}"/>
			<Setter Property="BorderThickness" Value="3"/>
			<Setter Property="Margin" Value="0"/>
			<Setter Property="Padding" Value="1"/>
			<Setter Property="MinWidth" Value="10"/>
			<Setter Property="MinHeight" Value="10"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TabControl}">
						<Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
							<Grid.RowDefinitions>
								<RowDefinition x:Name="RowDefinition0" Height="Auto"/>
								<RowDefinition x:Name="RowDefinition1" Height="*"/>
							</Grid.RowDefinitions>
							<Grid.ColumnDefinitions>
								<ColumnDefinition x:Name="ColumnDefinition0"/>
								<ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
							</Grid.ColumnDefinitions>
							<TabPanel Margin="2,2,2,0" x:Name="HeaderPanel" Background="Transparent" IsItemsHost="true" Panel.ZIndex="1" Grid.Column="0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Visibility="Collapsed"/>
							<Grid x:Name="ContentPanel" Grid.Column="0" Grid.Row="1" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
								<Microsoft_Windows_Themes:ClassicBorderDecorator Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderStyle="Raised" BorderThickness="{TemplateBinding BorderThickness}">
									<ContentPresenter Margin="0" x:Name="PART_SelectedContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ContentSource="SelectedContent"/>
								</Microsoft_Windows_Themes:ClassicBorderDecorator>
							</Grid>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
       <!-- -->






			<ControlTemplate x:Key="clockTemplate">
				<Grid>
					<Grid.Resources>
						<converters:HourToAngle x:Key="hourToAngle" />
						<converters:MinuteToAngle x:Key="minuteToAngle" />
					</Grid.Resources>
					<Ellipse Width="108" Height="108" StrokeThickness="3">
						<Ellipse.Stroke>
							<LinearGradientBrush>
								<GradientStop Color="LightBlue" Offset="0" />
								<GradientStop Color="DarkBlue" Offset="1" />
							</LinearGradientBrush>
						</Ellipse.Stroke>
					</Ellipse>
					<Ellipse VerticalAlignment="Center" HorizontalAlignment="Center" Width="104" Height="104" Fill="LightBlue" StrokeThickness="3">
						<Ellipse.Stroke>
							<LinearGradientBrush>
								<GradientStop Color="DarkBlue" Offset="0" />
								<GradientStop Color="LightBlue" Offset="1" />
							</LinearGradientBrush>
						</Ellipse.Stroke>
					</Ellipse>
					<Canvas Width="102" Height="102">
						<Ellipse Width="8" Height="8" Fill="Black" Canvas.Top="46" Canvas.Left="46" />
						<Rectangle Canvas.Top="5" Canvas.Left="48" Fill="Black" Width="4" Height="8">
							<Rectangle.RenderTransform>
								<RotateTransform CenterX="2" CenterY="46" Angle="0" />
							</Rectangle.RenderTransform>
						</Rectangle>
						<Rectangle Canvas.Top="5" Canvas.Left="49" Fill="Black" Width="2" Height="6">
							<Rectangle.RenderTransform>
								<RotateTransform CenterX="2" CenterY="46" Angle="30" />
							</Rectangle.RenderTransform>
						</Rectangle>
						<Rectangle Canvas.Top="5" Canvas.Left="49" Fill="Black" Width="2" Height="6">
							<Rectangle.RenderTransform>
								<RotateTransform CenterX="2" CenterY="46" Angle="60" />
							</Rectangle.RenderTransform>
						</Rectangle>
						<Rectangle Canvas.Top="5" Canvas.Left="48" Fill="Black" Width="4" Height="8">
							<Rectangle.RenderTransform>
								<RotateTransform CenterX="2" CenterY="46" Angle="90" />
							</Rectangle.RenderTransform>
						</Rectangle>
						<Rectangle Canvas.Top="5" Canvas.Left="49" Fill="Black" Width="2" Height="6">
							<Rectangle.RenderTransform>
								<RotateTransform CenterX="2" CenterY="46" Angle="120" />
							</Rectangle.RenderTransform>
						</Rectangle>
						<Rectangle Canvas.Top="5" Canvas.Left="49" Fill="Black" Width="2" Height="6">
							<Rectangle.RenderTransform>
								<RotateTransform CenterX="2" CenterY="46" Angle="150" />
							</Rectangle.RenderTransform>
						</Rectangle>
						<Rectangle Canvas.Top="5" Canvas.Left="48" Fill="Black" Width="4" Height="8">
							<Rectangle.RenderTransform>
								<RotateTransform CenterX="2" CenterY="46" Angle="180" />
							</Rectangle.RenderTransform>
						</Rectangle>
						<Rectangle Canvas.Top="5" Canvas.Left="49" Fill="Black" Width="2" Height="6">
							<Rectangle.RenderTransform>
								<RotateTransform CenterX="2" CenterY="46" Angle="210" />
							</Rectangle.RenderTransform>
						</Rectangle>
						<Rectangle Canvas.Top="5" Canvas.Left="49" Fill="Black" Width="2" Height="6">
							<Rectangle.RenderTransform>
								<RotateTransform CenterX="2" CenterY="46" Angle="240" />
							</Rectangle.RenderTransform>
						</Rectangle>
						<Rectangle Canvas.Top="5" Canvas.Left="48" Fill="Black" Width="4" Height="8">
							<Rectangle.RenderTransform>
								<RotateTransform CenterX="2" CenterY="46" Angle="270" />
							</Rectangle.RenderTransform>
						</Rectangle>
						<Rectangle Canvas.Top="5" Canvas.Left="49" Fill="Black" Width="2" Height="6">
							<Rectangle.RenderTransform>
								<RotateTransform CenterX="2" CenterY="46" Angle="300" />
							</Rectangle.RenderTransform>
						</Rectangle>
						<Rectangle Canvas.Top="5" Canvas.Left="49" Fill="Black" Width="2" Height="6">
							<Rectangle.RenderTransform>
								<RotateTransform CenterX="2" CenterY="46" Angle="330" />
							</Rectangle.RenderTransform>
						</Rectangle>
						<Rectangle x:Name="HourHand" Canvas.Top="21" Canvas.Left="48" Fill="Black" Width="4" Height="30">
							<Rectangle.RenderTransform>
								<RotateTransform x:Name="HourHand2" CenterX="2" CenterY="30" Angle="{Binding Mode=OneWay, Converter={StaticResource hourToAngle}}">
								</RotateTransform>
							</Rectangle.RenderTransform>
						</Rectangle>
						<Rectangle x:Name="MinuteHand" Canvas.Top="6" Canvas.Left="49" Fill="Black" Width="2" Height="45">
							<Rectangle.RenderTransform>
								<RotateTransform CenterX="1" CenterY="45" Angle="{Binding Mode=OneWay, Converter={StaticResource minuteToAngle}}">
								</RotateTransform>
							</Rectangle.RenderTransform>
						</Rectangle>
					</Canvas>
				</Grid>
			</ControlTemplate>


	</Application.Resources>
</Application>
